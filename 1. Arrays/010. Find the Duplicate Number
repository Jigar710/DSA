int findDuplicate(vector<int>& nums) {
        unordered_map<int,bool> visited;
        for(int i=0;i<nums.size();i++){
            if(!visited[nums[i]]){
                visited[nums[i]] = true;
            }else{
                return nums[i];
            }
        }
        return -1;
    }
-------------------------------------------
=> Fast Approach
int findDuplicate(vector<int>& nums) {
        int slow = nums[0];
        int fast = nums[0];
        do{
        slow = nums[slow];
        fast = nums[nums[fast]];
        }while(slow!=fast);
        fast=nums[0];
        while(slow!=fast)
        {
            slow = nums[slow];
            fast = nums[fast];
        }
        return slow;
    }
